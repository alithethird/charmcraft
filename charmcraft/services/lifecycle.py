# Copyright 2023 Canonical Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# For further info, check https://github.com/canonical/charmcraft
"""Service class for running craft lifecycle commands."""
from __future__ import annotations
from typing import Iterable

from craft_application import services
import craft_cli
import craft_parts
import craft_platforms
from craft_parts.callbacks import register_stage_packages_filter


UBUNTU_BASE_IGNORE_PACKAGES = frozenset({
    "base-files",
    "base-passwd",
    "ubuntu-minimal",
})
JAMMY_IGNORE_PACKAGES = frozenset({
    "adduser",
    "apt",
    "apt-utils",
    "cdebconf",
    "console-setup",
    "console-setup-linux",
    "console-setup-mini",
    "debconf",
    "debconf-i18n",
    "debianutils",
    "distro-info",
    "distro-info-data",
    "dpkg",
    "e2fsprogs",
    "eject",
    "gcc-12-base",
    "gpgv",
    "gpgv1",
    "gpgv2",
    "init",
    "init-system-helpers",
    "install-info",
    "iproute2",
    "iputils-ping",
    "isc-dhcp-client",
    "kbd",
    "keyboard-configuration",
    "kmod",
    "less",
    "libacl1",
    "libapparmor1",
    "libapt-pkg6.0",
    "libargon2-1",
    "libaudit-common",
    "libaudit1",
    "libblkid1",
    "libbpf0",
    "libbsd0",
    "libbz2-1.0",
    "libc-bin",
    "libc6",
    "libcap-ng0",
    "libcap2",
    "libcap2-bin",
    "libcom-err2",
    "libcrypt1",
    "libcryptsetup12",
    "libdb5.3",
    "libdbus-1-3",
    "libdebian-installer4",
    "libdevmapper1.02.1",
    "libdns-export1110",
    "libelf1",
    "libexpat1",
    "libext2fs2",
    "libffi8",
    "libgcc-s1",
    "libgcrypt20",
    "libgdbm-compat4",
    "libgdbm6",
    "libglib2.0-0",
    "libgmp10",
    "libgnutls30",
    "libgpg-error0",
    "libgssapi-krb5-2",
    "libhogweed6",
    "libidn2-0",
    "libip4tc2",
    "libisc-export1105",
    "libjson-c5",
    "libk5crypto3",
    "libkeyutils1",
    "libkmod2",
    "libkrb5-3",
    "libkrb5support0",
    "libldap-2.5-0",
    "liblocale-gettext-perl",
    "liblz4-1",
    "liblzma5",
    "libmd0",
    "libmnl0",
    "libmount1",
    "libmpdec3",
    "libncurses6",
    "libncursesw6",
    "libnetplan0",
    "libnettle8",
    "libnewt0.52",
    "libnsl2",
    "libp11-kit0",
    "libpam-modules",
    "libpam-modules-bin",
    "libpam0g",
    "libpcre2-8-0",
    "libpcre3",
    "libperl5.34",
    "libpopt0",
    "libprocps8",
    "libpython3-stdlib",
    "libpython3.10-minimal",
    "libpython3.10-stdlib",
    "libreadline8",
    "libsasl2-2",
    "libsasl2-modules-db",
    "libseccomp2",
    "libselinux1",
    "libsemanage-common",
    "libsemanage2",
    "libsepol2",
    "libslang2",
    "libsmartcols1",
    "libsqlite3-0",
    "libss2",
    "libssl3",
    "libstdc++6",
    "libsystemd0",
    "libtasn1-6",
    "libtext-charwidth-perl",
    "libtext-iconv-perl",
    "libtext-wrapi18n-perl",
    "libtextwrap1",
    "libtinfo6",
    "libtirpc-common",
    "libtirpc3",
    "libudev1",
    "libunistring2",
    "libuuid1",
    "libxtables12",
    "libxxhash0",
    "libyaml-0-2",
    "libzstd1",
    "locales",
    "logsave",
    "lsb-base",
    "lsb-release",
    "mailcap",
    "mawk",
    "media-types",
    "mime-support",
    "mount",
    "netbase",
    "netcat-openbsd",
    "netplan.io",
    "passwd",
    "perl",
    "perl-base",
    "perl-modules-5.34",
    "procps",
    "python-apt-common",
    "python3",
    "python3-apt",
    "python3-dbus",
    "python3-minimal",
    "python3-netifaces",
    "python3-pkg-resources",
    "python3-yaml",
    "python3.10",
    "python3.10-minimal",
    "readline-common",
    "sensible-utils",
    "sudo",
    "sudo-ldap",
    "systemd",
    "systemd-sysv",
    "tar",
    "tzdata",
    "ubuntu-advantage-tools",
    "ubuntu-keyring",
    "ubuntu-minimal",
    "ubuntu-pro-client",
    "udev",
    "util-linux",
    "vim-common",
    "vim-tiny",
    "whiptail",
    "xkb-data",
    "xxd",
    "zlib1g",
})
NOBLE_IGNORE_PACKAGES = frozenset({
    "adduser",
    "apt",
    "apt-utils",
    "base-passwd",
    "cdebconf",
    "console-setup",
    "console-setup-linux",
    "console-setup-mini",
    "debconf",
    "debconf-i18n",
    "dhcpcd-base",
    "distro-info",
    "distro-info-data",
    "dpkg",
    "e2fsprogs",
    "eject",
    "gcc-14-base",
    "gpgv",
    "init",
    "init-system-helpers",
    "iproute2",
    "iputils-ping",
    "kbd",
    "keyboard-configuration",
    "kmod",
    "less",
    "libacl1",
    "libapparmor1",
    "libapt-pkg6.0t64",
    "libargon2-1",
    "libassuan0",
    "libaudit-common",
    "libaudit1",
    "libblkid1",
    "libbpf1",
    "libbsd0",
    "libbz2-1.0",
    "libc-bin",
    "libc6",
    "libcap-ng0",
    "libcap2",
    "libcap2-bin",
    "libcom-err2",
    "libcrypt1",
    "libcryptsetup12",
    "libdb5.3t64",
    "libdbus-1-3",
    "libdebconfclient0",
    "libdebian-installer4",
    "libdevmapper1.02.1",
    "libelf1t64",
    "libexpat1",
    "libext2fs2t64",
    "libfdisk1",
    "libffi8",
    "libgcc-s1",
    "libgcrypt20",
    "libglib2.0-0t64",
    "libgmp10",
    "libgnutls30t64",
    "libgpg-error0",
    "libgssapi-krb5-2",
    "libhogweed6t64",
    "libidn2-0",
    "libjson-c5",
    "libk5crypto3",
    "libkeyutils1",
    "libkmod2",
    "libkrb5-3",
    "libkrb5support0",
    "libldap2",
    "liblocale-gettext-perl",
    "liblz4-1",
    "liblzma5",
    "libmd0",
    "libmnl0",
    "libmount1",
    "libncursesw6",
    "libnetplan1",
    "libnettle8t64",
    "libnewt0.52",
    "libnpth0t64",
    "libnss-sudo",
    "libp11-kit0",
    "libpam-modules",
    "libpam-modules-bin",
    "libpam0g",
    "libpcre2-8-0",
    "libpopt0",
    "libproc2-0",
    "libpython3-stdlib",
    "libpython3.12-minimal",
    "libpython3.12-stdlib",
    "libreadline8t64",
    "libsasl2-2",
    "libsasl2-modules-db",
    "libseccomp2",
    "libselinux1",
    "libsemanage-common",
    "libsemanage2",
    "libsepol2",
    "libslang2",
    "libsmartcols1",
    "libsqlite3-0",
    "libss2",
    "libssl3t64",
    "libstdc++6",
    "libsystemd-shared",
    "libsystemd0",
    "libtasn1-6",
    "libtext-charwidth-perl",
    "libtext-iconv-perl",
    "libtext-wrapi18n-perl",
    "libtextwrap1",
    "libtinfo6",
    "libtirpc-common",
    "libtirpc3t64",
    "libudev1",
    "libunistring5",
    "libuuid1",
    "libxtables12",
    "libxxhash0",
    "libyaml-0-2",
    "libzstd1",
    "locales",
    "logsave",
    "lsb-release",
    "mawk",
    "media-types",
    "mount",
    "netbase",
    "netcat-openbsd",
    "netplan-generator",
    "netplan.io",
    "opensysusers",
    "passwd",
    "perl-base",
    "procps",
    "python-apt-common",
    "python3",
    "python3-apt",
    "python3-cffi-backend",
    "python3-dbus",
    "python3-minimal",
    "python3-netifaces",
    "python3-netplan",
    "python3-pkg-resources",
    "python3-yaml",
    "python3.12",
    "python3.12-minimal",
    "readline-common",
    "sensible-utils",
    "sudo",
    "sudo-ldap",
    "systemd",
    "systemd-dev",
    "systemd-standalone-sysusers",
    "systemd-sysv",
    "tar",
    "tzdata",
    "ubuntu-keyring",
    "ubuntu-minimal",
    "ubuntu-pro-client",
    "udev",
    "vim-common",
    "vim-tiny",
    "whiptail",
    "xkb-data",
    "zlib1g",
})


class LifecycleService(services.LifecycleService):
    """Business logic for lifecycle builds."""

    def setup(self) -> None:
        """Do Charmcraft-specific setup work."""
        self._manager_kwargs.setdefault("project_name", self._project.name)
        super().setup()
        register_stage_packages_filter(self._filter_stage_packages)


    def _filter_stage_packages(self, project_info: craft_parts.ProjectInfo) ->  Iterable[str]:
        """Create a filter for stage-packages in a charm, based on the Ubuntu base."""
        if len(self._build_plan) != 1:
            return ()  # Multiple builds - bail out and don't filter.
        build_info = self._build_plan[0]
        if build_info.base.name != "ubuntu":
            return ()  # Non-Ubuntu - we don't currently have any filters.


        match build_info.base.version:
            case "22.04":
                return UBUNTU_BASE_IGNORE_PACKAGES | JAMMY_IGNORE_PACKAGES
            case "24.04":
                return UBUNTU_BASE_IGNORE_PACKAGES | NOBLE_IGNORE_PACKAGES
            case _:
                return UBUNTU_BASE_IGNORE_PACKAGES
